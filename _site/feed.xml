<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-10-27T02:20:59+05:30</updated><id>http://localhost:4000//</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/sss/jekyll/update/2016/10/27/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-10-27T00:24:57+05:30</published><updated>2016-10-27T00:24:57+05:30</updated><id>http://localhost:4000/sss/jekyll/update/2016/10/27/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/sss/jekyll/update/2016/10/27/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2016/10/27/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-10-27T00:24:57+05:30</published><updated>2016-10-27T00:24:57+05:30</updated><id>http://localhost:4000/jekyll/update/2016/10/27/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/10/27/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">RBI is correctly taking baby steps around fintech regulation</title><link href="http://localhost:4000/2016/08/17/rbi-is-correctly-taking-baby-steps-around-fintech-regulation.html" rel="alternate" type="text/html" title="RBI is correctly taking baby steps around fintech regulation" /><published>2016-08-17T19:02:30+05:30</published><updated>2016-08-17T19:02:30+05:30</updated><id>http://localhost:4000/2016/08/17/rbi-is-correctly-taking-baby-steps-around-fintech-regulation</id><content type="html" xml:base="http://localhost:4000/2016/08/17/rbi-is-correctly-taking-baby-steps-around-fintech-regulation.html">&lt;p&gt;This post is a response to the YourStory article - &lt;a href=&quot;https://yourstory.com/2016/08/rbi-regulations-online-platforms/&quot;&gt;Is RBI over-regulating by allotting online platforms additional responsibilities?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The gist of the article is that the RBI is overreaching by imposing capital and regulatory requirements to a nascent and developing P2P lending industry. Since my &lt;a href=&quot;https://www.redcarpetup.com/&quot;&gt;startup&lt;/a&gt; is related to the same space, I have some perspectives on the same.&lt;/p&gt;

&lt;p&gt;Harini makes a good point that it is generally a good idea to not overregulate certain segments. For example, the Monetary Authority of Singapore not only provides &lt;a href=&quot;http://www.mas.gov.sg/Singapore-Financial-Centre/Smart-Financial-Centre/Setting-up-your-Business.aspx&quot;&gt;financial support&lt;/a&gt; to fintech startups, but it has also &lt;a href=&quot;http://www.bloomberg.com/news/articles/2016-04-13/singapore-to-regulate-fintech-firms-only-when-they-pose-risks&quot;&gt;committed&lt;/a&gt; to not interfere until startups reach a certain size.&lt;/p&gt;

&lt;p&gt;However, I also feel that RBI is not being unfair when it is imposing certain regulations on this sector. For example, requirement for P2P lending startups to be NBFCs. It is easy to call these requirements “&lt;em&gt;absurd&lt;/em&gt;”, but if we look at the worldwide standard around lending platforms - there is precedent to imposition of volume based financial resources requirement. For example the UK based FCA &lt;a href=&quot;http://www.crowdfundinsider.com/2014/05/38461-uk-us-peer-peer-regulation-enlightened-touch-vs-square-peg-round-hole/&quot;&gt;imposed&lt;/a&gt; the following constraints for any &lt;em&gt;crowdfunding&lt;/em&gt; platform (including P2P)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;0.2% of the first 50 million pounds of total loans issued and outstanding;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;0.15% of the next 200 million pounds of total loans issued and outstanding;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;0.1% of the next 250 million pounds of total loans issued and outstanding; and&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;0.05% an any remaining balance of loans issued and outstanding.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Interestingly, these constraints came as a consequence of several rounds of back and forth between startups and the FCA. Now, the NBFC rules in India impose a static 2 crore holding requirement.. which I would argue is much more lenient than the volume based approach of the UK government. The financial watchdogs of the UK have a much more stringent  corporate governance code than in India. Perhaps most people are not aware that NBFCs are still available for sale in India for black money (just like you would sell real estate) as a way to escape scrutiny by the people who eventually end up controlling the NBFC.&lt;/p&gt;

&lt;p&gt;The objection to the “no assured returns” clause is a little puzzling to me - the RBI has rightfully mandated that just like stocks or mutual funds, nobody should &lt;strong&gt;claim&lt;/strong&gt; a certain assured return. The reason that P2P platforms may stoop to promise assured returns because of investor pressure or the need to make quarterly numbers. It would not be surprising for a platform to run TV ads asking to “&lt;em&gt;give a loan on Platform-Z and get guaranteed interest rates of 100%&lt;/em&gt;”. It is precisely the reason that ULIPs were regulated - because their promise of returns never accounted for “management fees”.&lt;/p&gt;

&lt;p&gt;Now both the above points, combine to form a logic to see why the third point makes sense: The objection to word “expansion” - the logic is exactly what the FCA in Britain put across. That, you need to maintain a certain leverage ratio for the cash on hand and cash lent out. This is direct consequence to the behavior in China where uncontrolled expansion and leverage led to P2P platforms &lt;a href=&quot;https://www.techinasia.com/fall-76b-ponzi-scheme-ezubao-bad-chinas-p2p-lending-companies&quot;&gt;wiping out billions of dollars&lt;/a&gt; of capital. The way this worked was very simple - it was effectively Ponzi borrowing because of “assured returns”. Ezubao promised unrealistically high “guaranteed returns” (&lt;strong&gt;seven times&lt;/strong&gt; the bank rate). To fund these returns which it had to pay its early investors, it went and promised even higher returns to new investors… that it used to pay back older investors. This is why the RBI is rightfully mandating a leverage ratio to prevent Ponzi mechanisms.&lt;/p&gt;

&lt;p&gt;As far as clarifications on related party transactions are concerned - these are not banned by the government. The govt only says that related party transactions must not be at terms that are not normally offered. What everyone may not be aware of is that, by making the NBFC requirement as mandatory, the RBI has already taken care of that - via notification &lt;a href=&quot;https://rbidocs.rbi.org.in/rdocs/notification/PDFs/57MC01072013BF.pdf&quot;&gt;RBI/2013 - 14/57&lt;/a&gt;. This notification makes it amply clear that Net Owned Funds of NBFC are reduced by giving them out to&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;subsidiaries&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;companies in same group&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;other NBFC&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An online platform does not evolve transparency in a vacuum - lending companies are risk centres and the central bank has a duty to not let one become a chain reaction meltdown. These regulations make a whole lot of sense for the overall health of the new age lending ecosystem in India and will catastrophic events like the Ezubao event.&lt;/p&gt;

&lt;p&gt;What I do support Harini over is that the govt of India needs to take the same approach as the Monetary Authority of Singapore - treat fintech companies as a sort of “SEZ” and let them grow unhindered until they reach a scale when it becomes mandatory to regulate them.&lt;/p&gt;

&lt;p&gt;And regulate them we should.&lt;/p&gt;</content><author><name>admin</name></author><summary type="html">This post is a response to the YourStory article - Is RBI over-regulating by allotting online platforms additional responsibilities?</summary></entry><entry><title type="html">Suspending systemd/upowerd/logind on low battery (Fedora or Ubuntu)</title><link href="http://localhost:4000/2015/10/25/suspending-low-battery.html" rel="alternate" type="text/html" title="Suspending systemd/upowerd/logind on low battery (Fedora or Ubuntu)" /><published>2015-10-25T15:03:33+05:30</published><updated>2015-10-25T15:03:33+05:30</updated><id>http://localhost:4000/2015/10/25/suspending-low-battery</id><content type="html" xml:base="http://localhost:4000/2015/10/25/suspending-low-battery.html">&lt;p&gt;On older Linux OS versions, the system used to automatically suspend on low battery. Then this was managed by gsettings using&lt;/p&gt;

&lt;blockquote&gt;`gsettings set org.gnome.settings-daemon.plugins.power critical-battery-action 'suspend'`&lt;/blockquote&gt;

&lt;p&gt;But there have been some breaking changes (for the good) that has taken all of this out of any obvious control of the user. If you open &lt;em&gt;/etc/UPower/UPower.conf , _you will see that the only option _CriticalPowerAction=HybridSleep &lt;/em&gt;. So Hybrid-Sleep/Hibernate/Shutdown are the only options on low power. Testing out hybrid-sleep (using &lt;em&gt;sudo /usr/lib/systemd/systemd-sleep hybrid-sleep&lt;/em&gt;) does not do anything… which is unsurprising.&lt;/p&gt;

&lt;p&gt;So what you need to do is switch HybridSleep to actually suspend. The way to do it is&lt;/p&gt;

&lt;p&gt;Create a /etc/systemd/sleep.conf&lt;/p&gt;

&lt;blockquote&gt;

&amp;gt;     
&amp;gt;     &lt;code&gt;[Sleep]
&amp;gt;     # And finally settings for hybrid-sleep -action
&amp;gt;     HybridSleepMode=suspend platform
&amp;gt;     HybridSleepState=mem
&amp;gt;     
&amp;gt;     
&amp;gt;     # Setting for suspend -action
&amp;gt;     SuspendState=mem disk #freeze
&amp;gt;     SuspendMode=suspend
&amp;gt;     &lt;/code&gt;
&amp;gt; 
&amp;gt; 
&lt;/blockquote&gt;

&lt;p&gt;verify by running &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo /usr/lib/systemd/systemd-sleep hybrid-sleep&lt;/code&gt;&lt;/p&gt;</content><author><name>admin</name></author><summary type="html">On older Linux OS versions, the system used to automatically suspend on low battery. Then this was managed by gsettings using</summary></entry><entry><title type="html">The power of Digital India and the futility of our government</title><link href="http://localhost:4000/2015/09/28/the-power-of-digital-india-and-the-futility-of-our-government.html" rel="alternate" type="text/html" title="The power of Digital India and the futility of our government" /><published>2015-09-28T14:33:01+05:30</published><updated>2015-09-28T14:33:01+05:30</updated><id>http://localhost:4000/2015/09/28/the-power-of-digital-india-and-the-futility-of-our-government</id><content type="html" xml:base="http://localhost:4000/2015/09/28/the-power-of-digital-india-and-the-futility-of-our-government.html">&lt;p&gt;There’s been a few reddit threads started about how the #DigitalIndia campaign is a stupid exercise and our funds and efforts should be better utilized on building basic infrastructure for farmers. It is a classic comment that gets repeated again and again. It is fairly similar to an argument in a hospital - should you do the surgery yourself or spend a lot of extra time+effort+money training a new intern on how to perform surgery. Do note that it will take many years for the intern to qualify to do a surgery.&lt;/p&gt;

&lt;p&gt;In 2002, when I graduated from IIT Bombay, I was part of a small project called a&lt;a href=&quot;https://en.wikipedia.org/wiki/Aaqua&quot;&gt;AquA&lt;/a&gt; headed by Prof Krithi Ramamritham. I will have to confess that I did no work, and was more interested in getting drunk - but aAquA turned into something very powerful. It still lives on today at https://aaqua.persistent.co.in/aaqua/forum/index and is run by Persistent Systems.&lt;/p&gt;

&lt;p&gt;aAquA stood for Almost All Questions Answered. Think of it as Quora + Wikipedia for farmers.  The interesting point was that this effort predates the mobile phone revolution in India or even the internet revolution. It predates Flipkart or any ecommerce in India. Even more flabbergasting is that aAquA was contemporary with television based content for farmers (e.g. Krishi Darshan), yet was being used by farmers who walked all the way to telephone booth to access the internet. What did help a lot was that it was multi-lingual from the start (e.g. &lt;a href=&quot;https://aaqua.persistent.co.in/aaqua/forum/viewthread?thread=24242&quot;&gt;here&lt;/a&gt;) which was very important to reach out to that particular demographic.&lt;/p&gt;

&lt;p&gt;Imagine what you could do with a mobile aAquA !&lt;/p&gt;

&lt;p&gt;DigitalIndia is a fair goal, but unfortunately the goal is badly planned and is doomed to failure. Let’s take a simple example - just to get millions of farmers connected to the internet, presumably through their mobile devices, needs IPV6. In case people havent noticed, we have&lt;a href=&quot;http://www.theinquirer.net/inquirer/news/2427696/as-the-us-runs-out-of-ipv4-addresses-bt-confirms-uk-rollout-of-ipv6&quot;&gt; run out of IPV4 addresses&lt;/a&gt;. Yes, there are ways to get around it.. but it makes zero sense in a country of our population. We need IPV6 yesterday to enable mobile connectivity, yet we have no comprehensive strategic plan around IPV6.&lt;/p&gt;

&lt;p&gt;The only other country with a crippling dependence on IPV6 is China, but it started a large scale push to IPV6 in 2008 (using the Olympics as an &lt;a href=&quot;http://ipv6.com/articles/general/IPv6-Olympics-2008.htm&quot;&gt;excuse&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Also remember that we are the ones who need a large number of fonts and language support for our users to use the internet. That effort has not been standardized yet - in fact the only place I can find comprehensive Indic fonts is at the &lt;a href=&quot;https://www.google.com/get/noto/&quot;&gt;Google Noto&lt;/a&gt; project. However, font rendering for the lesser known languages needs compex technologies like &lt;a href=&quot;http://scripts.sil.org/cms/scripts/page.php?site_id=projects&amp;amp;item_id=graphite_aboutOT&quot;&gt;SIL Graphite&lt;/a&gt; which is not an important criteria for the rest of the world. Even if we solve it, we have no content on the internet that serves these languages. Take for instance the &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Traditional_Knowledge_Digital_Library&quot;&gt;Traditional Knowledge Digital Library&lt;/a&gt; - &lt;/strong&gt;the content inside is locked up in unreadable images and english language PDF. It cannot even be translated effectively.&lt;/p&gt;

&lt;p&gt;And while these are important aspects to be taken under consideration, our government is keen on focusing on censorship and banning porn sites.&lt;/p&gt;

&lt;p&gt;Digital India is a fair goal. I have zero confidence that this government can actually execute it.&lt;/p&gt;

&lt;h2 id=&quot;indian-fonts-and-the-digital-divide&quot;&gt;Indian fonts and the Digital Divide&lt;/h2&gt;

&lt;p&gt;EDIT: so I got a question from Kiran on what’s so difficult about supporting Indian languages. After all most computers have Indian languages, right ?&lt;/p&gt;

&lt;p&gt;Wrong.&lt;/p&gt;

&lt;p&gt;There is NO operating system in existence that supports Indian languages in all its complexity. This is called the “ligature” problem - what we know in hindi as “maatras”. Historically, Microsoft has been the most compatible of all operating systems for Indian languages. Take for example this page on &lt;a href=&quot;http://www.microsoft.com/typography/OpenTypeDev/oriya/intro.htm&quot;&gt;Oriya language support&lt;/a&gt; on Microsoft’s official site. The complexity of supporting Oriya is laid bare.&lt;/p&gt;

&lt;p&gt;Look at the same language on &lt;a href=&quot;https://www.google.com/get/noto/#sans-orya&quot;&gt;Noto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even more interestingly, Noto screws up on Urdu - it assumes the Arabic Nashq script for Urdu. However, Urdu is an Indian language - it uses a derivative of the Persian Nastaliq fonts (a brilliant write up by Ali Eteraz &lt;a href=&quot;https://medium.com/@eteraz/the-death-of-the-urdu-script-9ce935435d90&quot;&gt;here&lt;/a&gt;) .&lt;/p&gt;

&lt;p&gt;This is why I filed a bug on &lt;a href=&quot;https://github.com/googlei18n/noto-fonts/issues/39&quot;&gt;Google&lt;/a&gt; ;)&lt;/p&gt;

&lt;p&gt;So what happens in Android currently ? Android re-uses the same fonts as Linux - that is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Lohit_fonts&quot;&gt;Lohit Indic&lt;/a&gt; fonts. However, Noto has undergone several improvements in rendering (as can be seen in this &lt;a href=&quot;https://github.com/googlei18n/noto-fonts/issues/474&quot;&gt;bug&lt;/a&gt;). Hindi/Devanagari specific efforts in this direction have been &lt;a href=&quot;http://software.sil.org/annapurna/&quot;&gt;SIL Annapurna&lt;/a&gt; and Microsoft’s &lt;a href=&quot;https://www.microsoft.com/typography/fonts/font.aspx?FMID=1811&quot;&gt;Utsaah&lt;/a&gt; / &lt;a href=&quot;https://en.wikipedia.org/wiki/Nirmala_UI&quot;&gt;Nirmala&lt;/a&gt; .. but no such love exists for most of the other Indian languages (especially south Indian).&lt;/p&gt;

&lt;p&gt;Now, SIL Graphite rendering technology is far superior to Harfbuzz/Pango (which is what is used by default on Linux/android) &lt;strong&gt;for minority and Indic languages&lt;/strong&gt;. But for obvious reasons, it is not a priority for the core Android project. Additionally, how do you input text on mobile phones in Oriya ? You have to hunt through hundreds of keyboard apps to find one that works. this is NOT how you do DigitalIndia.&lt;/p&gt;

&lt;p&gt;Apparently, our govt is spending a lot of money on a customized version of Linux called BOSS. And what is so special about this great OS ? &lt;a href=&quot;http://wiki.bosslinux.in/wiki/index.php/Security&quot;&gt;this&lt;/a&gt;. As most people would know, this takes a system administrator all of 2 hours to configure.&lt;/p&gt;

&lt;p&gt;You want to bridge the digital divide ? let’s first understand the problem - language accessibility and infrastructure/IPV6 problems. Let’s talk about Facebook later.&lt;/p&gt;</content><author><name>admin</name></author><summary type="html">There’s been a few reddit threads started about how the #DigitalIndia campaign is a stupid exercise and our funds and efforts should be better utilized on building basic infrastructure for farmers. It is a classic comment that gets repeated again and again. It is fairly similar to an argument in a hospital - should you do the surgery yourself or spend a lot of extra time+effort+money training a new intern on how to perform surgery. Do note that it will take many years for the intern to qualify to do a surgery.</summary></entry><entry><title type="html">Dr APJ Abdul Kalam - RIP</title><link href="http://localhost:4000/2015/07/28/dr-apj-abdul-kalam-rip.html" rel="alternate" type="text/html" title="Dr APJ Abdul Kalam - RIP" /><published>2015-07-28T01:36:29+05:30</published><updated>2015-07-28T01:36:29+05:30</updated><id>http://localhost:4000/2015/07/28/dr-apj-abdul-kalam-rip</id><content type="html" xml:base="http://localhost:4000/2015/07/28/dr-apj-abdul-kalam-rip.html">&lt;p&gt;Dr Kalam used to live in the house behind mine before he came President. The day he became President, the only person allowed in his house was the dhobi! He still has the photo hanging under his tree.
I still remember when APJ Abdul Kalam spoke at IIT Bombay. He was one of my inspirations.
RIP&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://scontent.fsnc1-1.fna.fbcdn.net/hphotos-xtp1/t31.0-8/s960x960/11707974_836589276395686_5338350092939501884_o.jpg&quot; alt=&quot;Image credit - Thinkplus creatives&quot; /&gt;&lt;/p&gt;</content><author><name>admin</name></author><summary type="html">Dr Kalam used to live in the house behind mine before he came President. The day he became President, the only person allowed in his house was the dhobi! He still has the photo hanging under his tree.
I still remember when APJ Abdul Kalam spoke at IIT Bombay. He was one of my inspirations.
RIP</summary></entry><entry><title type="html">Creating  a Fedora 21 LiveUSB in Ubuntu 14.04</title><link href="http://localhost:4000/2015/01/06/creating-fedora-21-liveusb-ubuntu-14-04.html" rel="alternate" type="text/html" title="Creating  a Fedora 21 LiveUSB in Ubuntu 14.04" /><published>2015-01-06T18:04:32+05:30</published><updated>2015-01-06T18:04:32+05:30</updated><id>http://localhost:4000/2015/01/06/creating-fedora-21-liveusb-ubuntu-14-04</id><content type="html" xml:base="http://localhost:4000/2015/01/06/creating-fedora-21-liveusb-ubuntu-14-04.html">&lt;p&gt;Sadly, Ubuntu’s startup disk creator does not allow you to create fedora images.&lt;/p&gt;

&lt;p&gt;The **officially **sanctioned way to create a fedora liveusb in ubuntu is the following:&lt;/p&gt;

&lt;blockquote&gt;`sudo aptitude install isomd5sum python-parted python-pyisomd5sum python-urlgrabber extlinux python-qt4 python-qt4-dbus tar udisks libudisks2-dev`

`git clone https://github.com/lmacken/liveusb-creator.git`

`sudo ./liveusb-creator`&lt;/blockquote&gt;</content><author><name>admin</name></author><summary type="html">Sadly, Ubuntu’s startup disk creator does not allow you to create fedora images.</summary></entry><entry><title type="html">The correct way to update/change git submodules</title><link href="http://localhost:4000/2014/11/08/correct-way-updatechange-git-submodules.html" rel="alternate" type="text/html" title="The correct way to update/change git submodules" /><published>2014-11-08T10:27:23+05:30</published><updated>2014-11-08T10:27:23+05:30</updated><id>http://localhost:4000/2014/11/08/correct-way-updatechange-git-submodules</id><content type="html" xml:base="http://localhost:4000/2014/11/08/correct-way-updatechange-git-submodules.html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;rm -rf .git/modules/interesting_modules&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;delete the lines containing “[submodule “interesting_modules”] url=”http://something/”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;update .gitmodules&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;run “git submodule sync”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;run “git submodule init”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;run “git submodule update” - at this point, a new checkout should happen.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;new checkout will fail about a version mismatch. This is expected - the version of the submodule stored in the super-project is mismatched. “git status” should also show you “modified” in the submodule directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“cd interesting_submodule”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“git reset –hard HEAD”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;enjoy !&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>admin</name></author><summary type="html">rm -rf .git/modules/interesting_modules</summary></entry><entry><title type="html">The Android ART runtime is a Golang tunnel</title><link href="http://localhost:4000/2014/11/03/the-android-art-runtime-is-a-golang-tunnel.html" rel="alternate" type="text/html" title="The Android ART runtime is a Golang tunnel" /><published>2014-11-03T12:26:59+05:30</published><updated>2014-11-03T12:26:59+05:30</updated><id>http://localhost:4000/2014/11/03/the-android-art-runtime-is-a-golang-tunnel</id><content type="html" xml:base="http://localhost:4000/2014/11/03/the-android-art-runtime-is-a-golang-tunnel.html">&lt;p&gt;I’m willing to bet that the first reason that Android switched to ART from Dalvik is the possibility of linking directly to object code from Golang.&lt;/p&gt;

&lt;p&gt;The problem is not speeding up individual apps…the problem is that the core of Android is built in Java and therefore is accessible to another application over the same &lt;strong&gt;language/VM.&lt;/strong&gt; Now the issue is how do you get golang to link to this core?&lt;/p&gt;

&lt;p&gt;ART compiles Java down to object code and is now able to link across language boundaries - theoretically, this means that I should be able to now use Android libs from Python as well.&lt;/p&gt;

&lt;p&gt;Or, as is more likely, golang&lt;/p&gt;</content><author><name>admin</name></author><summary type="html">I’m willing to bet that the first reason that Android switched to ART from Dalvik is the possibility of linking directly to object code from Golang.</summary></entry><entry><title type="html">Setting up btcd + Go build for bitcoin</title><link href="http://localhost:4000/2014/03/29/setup-btcd-golang-bitcoin.html" rel="alternate" type="text/html" title="Setting up btcd + Go build for bitcoin" /><published>2014-03-29T10:41:32+05:30</published><updated>2014-03-29T10:41:32+05:30</updated><id>http://localhost:4000/2014/03/29/setup-btcd-golang-bitcoin</id><content type="html" xml:base="http://localhost:4000/2014/03/29/setup-btcd-golang-bitcoin.html">&lt;p&gt;My last post was about &lt;a href=&quot;http://www.lambdacurry.com/2014/03/compiling-bitcoin-0-9-0-transaction-malleability-fix/&quot;&gt;setting up&lt;/a&gt; the build system for Bitcoin reference system 0.9.0.&lt;/p&gt;

&lt;p&gt;There is an alternative architecture for Bitcoin called &lt;em&gt;btcd&lt;/em&gt; which is developed by Conformal Systems. This is claimed to be compatible with the main blockchain (including bugs).&lt;/p&gt;

&lt;p&gt;There is a very interesting &lt;a href=&quot;https://bitcointa.lk/threads/calling-out-the-bitcoin-foundation-scam.273069/page-10&quot;&gt;thread&lt;/a&gt; about how the btcd architecture (especially the split wallet/client and daemon architecture) has been adopted in the reference client at 0.9.0&lt;/p&gt;

&lt;p&gt;I find Go very, very pleasant and productive to work and understand and it’s package manager is absolutely brilliant.&lt;/p&gt;

&lt;p&gt;To setup your machine to work with btcd is absolutely trivial. Remember that this should be the **same **on any platform (Windows, Linux and Mac) since Go is cross platform in general. Only the particular binary of Go would be different.&lt;/p&gt;

&lt;p&gt;Download and unpack Go from &lt;a href=&quot;http://code.google.com/p/go/downloads/list&quot;&gt;http://code.google.com/p/go/downloads/list&lt;/a&gt; . I used &lt;a href=&quot;http://code.google.com/p/go/downloads/detail?name=go1.2.1.linux-amd64.tar.gz&amp;amp;can=2&amp;amp;q=&quot;&gt;http://code.google.com/p/go/downloads/detail?name=go1.2.1.linux-amd64.tar.gz&amp;amp;can=2&amp;amp;q=&lt;/a&gt; because I’m on Linux-64 bit but go ahead and use the one that you’re on.&lt;/p&gt;

&lt;p&gt;Assuming you unzip it to /home/sss/Code/go, set the following variable:&lt;/p&gt;

&lt;blockquote&gt;export GOROOT=/home/sss/Code/go&lt;/blockquote&gt;

&lt;p&gt;Test your Go installation by running _/home/sss/Code/go -v _. Ideally this environment variable should be in your zshrc, bashrc, etc. This never changes.&lt;/p&gt;

&lt;p&gt;Now, create a directory called &lt;em&gt;/home/sss/Code/mybtcd.&lt;/em&gt; This is your &lt;strong&gt;new workspace&lt;/strong&gt;. When you are working on a particular workspace, set the following environment variable:&lt;/p&gt;

&lt;blockquote&gt;export GOPATH=/home/sss/Code/mybtcd&lt;/blockquote&gt;

&lt;p&gt;This tells your Go package manager, the location of your top level workspace directory.&lt;/p&gt;

&lt;p&gt;Now, to get btcd and all its dependencies as well as compile it in one shot, run:&lt;/p&gt;

&lt;blockquote&gt;/home/sss/Code/go/bin/go get github.com/conformal/btcd/...&lt;/blockquote&gt;

&lt;p&gt;After a few minutes, you should have the following directories (which complies with Go’s &lt;a href=&quot;http://golang.org/doc/code.html&quot;&gt;recommended workspace directory structure&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;./bin/ -&amp;gt; all your binaries

./pkg/ -&amp;gt; all third party library dependencies

./src/ -&amp;gt; all btcd as well as dependent third party source.&lt;/blockquote&gt;

&lt;p&gt;Running your bitcoin daemon is simply &lt;em&gt;./bin/btcd _(help is at _./bin/btcd –help&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;To hack your code, just write your code in _./src/github.com/conformal/btcd/ _and run&lt;/p&gt;

&lt;blockquote&gt;~/Code/go/bin/go install -v -x  github.com/conformal/btcd/&lt;/blockquote&gt;

&lt;p&gt;All dependencies and binaries get rebuilt. Simple.&lt;/p&gt;</content><author><name>admin</name></author><summary type="html">My last post was about setting up the build system for Bitcoin reference system 0.9.0.</summary></entry></feed>
